%
%	function [labels] = classify_age(im_features, thresholds)
%
%	@brief: Classify age given feature vector and thresholds at which to
%               classify
%   
%   @param im_features: Vector of image features for lens as generated by
%                       `extract_CNN_features.m`
%
%   @param thresholds: Array of gestational ages (in weeks) to classify
%                       neonate. Currently gestational ages supported are
%                       (33, 34, 35, 36, 37, 38) weeks
%
%   @return: Array of binary labels corresponding to thresholds array
%            For example, if `thresholds=[33, 35, 37]` and
%            `labels`=[0, 1, 1]`, the lens region was classified as being 
%             [>33, <=35, <= 37]
%
%   @dependencies:
%       LIBSVM: https://www.csie.ntu.edu.tw/~cjlin/libsvm/
%
%   @author: Arjun Desai, Duke University
%            (c) Duke University
function [labels] = classify_age(im_features, thresholds)
    models_map = load('svm_models.mat');
    models_map = models_map.models_map;
    
    labels = zeros(length(thresholds), 1);
    
    for i=1:length(thresholds)
        threshold = thresholds(i);
        % Load svm model
        model = models_map(threshold);
        
        label = get_label(im_features, model);
        
        labels(i) = label;
    end
    
end

%
%	function [label, prob] = get_label(im_features, model)
%
%	@brief: Get label and probability of label given image features and 
%           SVM model
%   
%   @param im_features: Vector of image features for lens as generated by
%                       `extract_CNN_features.m`
%
%   @param model: SVM model corresponding to threshold as loaded from
%                   `svm_models.mat`
%
%   @return label: binary label
%   @return prob: [0, 1] probability of estimating label
%
%   @dependencies:
%       LIBSVM: https://www.csie.ntu.edu.tw/~cjlin/libsvm/
%
%   @author: Arjun Desai, Duke University
%            (c) Duke University
function [label, prob] = get_label(im_features, model)
    pseudo_labels = zeros(size(im_features, 1), 1);
    [label, ~, prob] = svmpredict(pseudo_labels, im_features, model, '-b 1 -q');
end
